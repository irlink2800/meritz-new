This sample illustrates how DexGuard can create app bundles, which you can
upload to the Google Play store.

You can let DexGuard create app bundles just like the standard Android Gradle
plugin, for example:

    ./gradlew bundleDebug
or
    ./gradlew bundleRelease

You can then upload the resulting app bundle file to the Google Play store.
Note that you need to sign your app with your upload key, and let Google sign
the target apk files with your app key.

You can also inspect the resulting app bundle file yourself with any standard
zip tool. For example:

    unzip -l build/outputs/bundle/debug/AppBundle-debug-protected.aab

For testing, you can use Google's bundletool to create the target apk files,
for example:

    bundletool build-apks \
      --overwrite \
      --ks=../../debug.keystore \
      --ks-pass=pass:android \
      --ks-key-alias=androiddebugkey \
      --key-pass=pass:android \
      --bundle=build/outputs/bundle/debug/AppBundle-debug-protected.aab \
      --output=AppBundle.apks

The output file AppBundle.apks is another zip archive containing the apk
files.

This sample illustrates a number of dimensions that bundletool can take into
account when splitting the apk files:

- assets/messages#tcf_astc,...: split for different supported texture compression formats.
- libs/armeabi-v7a,...        : split for different device architectures.
- res/drawable-xhdpi,...      : split for different device resolutions.
- res/values-ja,...           : split for different languages.
