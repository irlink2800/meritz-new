buildscript {
    repositories {
        maven {
            url '../../../../lib'       // For the DexGuard plugin.
        }
        google()                        // For the Android plugin.
        mavenCentral()                       // For anything else.
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0'
        //noinspection GradleDynamicVersion
        classpath 'com.guardsquare:dexguard-gradle-plugin:+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'dexguard'

repositories {
    google()  // For the Android support libraries.
    mavenCentral() // For any other libraries.
}

// We'll let the debug build use the debug library,
// and the release build use the release library.
dependencies {
    releaseImplementation fileTree(dir: 'libs', include: ['library-release-protected.aar'])
    debugImplementation   fileTree(dir: 'libs', include: ['library-debug-protected.aar'])
}

android {
    compileSdkVersion 28

    signingConfigs {
        debug {
            storeFile     file('../../../debug.keystore')
            storePassword 'android'
            keyAlias      'androiddebugkey'
            keyPassword   'android'
        }
    }

    defaultConfig {
        minSdkVersion    11
        targetSdkVersion 29
        signingConfig signingConfigs.debug
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs         = ['src']
            resources.srcDirs    = ['src']
            aidl.srcDirs         = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs          = ['res']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
        }
    }

    // Optionally split the apk per architecture.
    //splits {
    //    abi {
    //        enable true
    //        reset()
    //        include "armeabi-v7a", "arm64-v8a", "x86", "x86_64", "mips", "mips64"
    //        universalApk false
    //    }
    //}
}

dexguard {
    path = '../../../..'
    // We can build the sample with the sample license file
    license = '../../../../lib/dexguard-license.txt'
    configurations {
        debug {
            defaultConfiguration 'dexguard-debug.pro'
            configuration 'dexguard-project.txt'
            configuration 'proguard-project.txt'
        }
        release {
            defaultConfiguration 'dexguard-release.pro'
            configuration 'dexguard-project.txt'
            configuration 'proguard-project.txt'
        }
    }
}
