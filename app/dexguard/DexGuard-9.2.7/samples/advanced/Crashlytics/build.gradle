// The Gradle plugin currently expects the native libraries prepackaged in a
// jar in the libs directory.

buildscript {
    repositories {
        maven {
            url '../../../lib'          // For the DexGuard plugin.
        }
        google()                        // For the Android plugin.
        mavenCentral()                       // For anything else.
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.4'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
        classpath 'com.android.tools.build:gradle:7.0.0'
        //noinspection GradleDynamicVersion
        classpath 'com.guardsquare:dexguard-gradle-plugin:+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'dexguard'

repositories {
    google()                                       // For the Android support libraries.
    mavenCentral()                                      // For the other libraries.
}

dependencies {
    // Add the Firebase BoM.
    implementation platform('com.google.firebase:firebase-bom:26.1.1')

    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics'
}

android {
    compileSdkVersion 30

    signingConfigs {
        debug {
            storeFile     file('../../debug.keystore')
            storePassword 'android'
            keyAlias      'androiddebugkey'
            keyPassword   'android'
        }
    }

    defaultConfig {
        applicationId "com.example"
        minSdkVersion 16
        targetSdkVersion 28
        targetSdkVersion 30
        targetSdkVersion 29
        signingConfig signingConfigs.debug
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs         = ['src']
            resources.srcDirs    = ['src']
            aidl.srcDirs         = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs          = ['res']
            assets.srcDirs       = ['assets']
            jniLibs.srcDirs      = ['libs']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled false
            shrinkResources false
        }
    }

}

dexguard {
    path = '../../..'
    // We can build the sample with the sample license file
    license = '../../../lib/dexguard-license.txt'
    configurations {
        debug {
            defaultConfiguration 'dexguard-debug.pro'
            configuration 'dexguard-project.txt'
            configuration 'proguard-project.txt'
        }
        release {
            defaultConfiguration 'dexguard-release-conservative.pro'
            configuration 'dexguard-project.txt'
            configuration 'proguard-project.txt'

            // Enable mapping file uploads for the release build type.
            uploadCrashlyticsMappingFile = true
        }
    }
}
